"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var buttonModule = require("ui/button");
var RockModel_1 = require("./RockModel");
var RockUser = (function () {
    function RockUser(page, id) {
        this.imgUrl = '';
        this.imgUrls = ['~/images/scssors.png', '~/images/rock.png', '~/images/paper.png'];
        this.imgNum = 0;
        this.isWinner = -1;
        this.user = page.getViewById(id);
        this.imgUrl = this.imgUrls[0];
        this.startRolling();
        this.eventsetting();
    }
    RockUser.prototype.eventsetting = function () {
        var _this = this;
        this.user.on(buttonModule.Button.tapEvent, function () {
            clearInterval(_this.timer);
            _this.select();
        });
    };
    RockUser.prototype.select = function () {
        var selectedNum = RockModel_1.getSelected();
        var num;
        if (this.isWinner > -1 && selectedNum > -1) {
            num = (selectedNum + (this.isWinner === 1 ? 1 : 2)) % 3;
        }
        else {
            num = Math.floor(Math.random() * this.imgUrls.length);
        }
        this.user.src = this.imgUrls[num];
        RockModel_1.setSelected(num);
    };
    RockUser.prototype.setWinner = function (isWinner) {
        this.isWinner = isWinner;
    };
    RockUser.prototype.startRolling = function () {
        var _this = this;
        this.timer = setInterval(function () {
            _this.imgNum = (_this.imgNum + 1) % 3;
            _this.user.src = _this.imgUrls[_this.imgNum];
            if (_this.imgNum === 2) {
                _this.user.width = '40%';
            }
            else {
                _this.user.width = '35%';
            }
        }, 100);
    };
    RockUser.prototype.reset = function () {
        clearInterval(this.timer);
        this.startRolling();
    };
    return RockUser;
}());
exports.default = RockUser;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUm9ja1VzZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJSb2NrVXNlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHdDQUEyQztBQUMzQyx5Q0FBcUQ7QUFFckQ7SUFTSSxrQkFBWSxJQUFJLEVBQUUsRUFBRTtRQU5aLFdBQU0sR0FBVyxFQUFFLENBQUM7UUFDcEIsWUFBTyxHQUFrQixDQUFDLHNCQUFzQixFQUFFLG1CQUFtQixFQUFFLG9CQUFvQixDQUFDLENBQUM7UUFFN0YsV0FBTSxHQUFXLENBQUMsQ0FBQztRQUNuQixhQUFRLEdBQVcsQ0FBQyxDQUFDLENBQUM7UUFHMUIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBRWpDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUM5QixJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7UUFDcEIsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3hCLENBQUM7SUFFRCwrQkFBWSxHQUFaO1FBQUEsaUJBS0M7UUFKRyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRTtZQUN2QyxhQUFhLENBQUMsS0FBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQzFCLEtBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUNsQixDQUFDLENBQUMsQ0FBQTtJQUNOLENBQUM7SUFFRCx5QkFBTSxHQUFOO1FBQ0ksSUFBTSxXQUFXLEdBQUcsdUJBQVcsRUFBRSxDQUFDO1FBQ2xDLElBQUksR0FBVyxDQUFDO1FBRWhCLEVBQUUsQ0FBQSxDQUFFLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDLElBQUksV0FBVyxHQUFHLENBQUMsQ0FBRSxDQUFDLENBQUEsQ0FBQztZQUN6QyxHQUFHLEdBQUcsQ0FBQyxXQUFXLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBQyxDQUFDLENBQUM7UUFDMUQsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ0osR0FBRyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDMUQsQ0FBQztRQUVELElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDbEMsdUJBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNyQixDQUFDO0lBRUQsNEJBQVMsR0FBVCxVQUFVLFFBQVE7UUFDZCxJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztJQUM3QixDQUFDO0lBRUQsK0JBQVksR0FBWjtRQUFBLGlCQVVDO1FBVEcsSUFBSSxDQUFDLEtBQUssR0FBRyxXQUFXLENBQUM7WUFDckIsS0FBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLEtBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ3BDLEtBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxHQUFHLEtBQUksQ0FBQyxPQUFPLENBQUMsS0FBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQzFDLEVBQUUsQ0FBQyxDQUFDLEtBQUksQ0FBQyxNQUFNLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDcEIsS0FBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1lBQzVCLENBQUM7WUFBQyxJQUFJLENBQUMsQ0FBQztnQkFDSixLQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7WUFDNUIsQ0FBQztRQUNMLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUNaLENBQUM7SUFFRCx3QkFBSyxHQUFMO1FBQ0csYUFBYSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMxQixJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDdkIsQ0FBQztJQUNMLGVBQUM7QUFBRCxDQUFDLEFBMURELElBMERDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGJ1dHRvbk1vZHVsZSA9IHJlcXVpcmUoXCJ1aS9idXR0b25cIik7XG5pbXBvcnQge3NldFNlbGVjdGVkLCBnZXRTZWxlY3RlZH0gZnJvbSAnLi9Sb2NrTW9kZWwnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSb2NrVXNlciB7XG5cbiAgICBwcml2YXRlIHVzZXI7XG4gICAgcHJpdmF0ZSBpbWdVcmw6IHN0cmluZyA9ICcnO1xuICAgIHByaXZhdGUgaW1nVXJsczogQXJyYXk8c3RyaW5nPiA9IFsnfi9pbWFnZXMvc2Nzc29ycy5wbmcnLCAnfi9pbWFnZXMvcm9jay5wbmcnLCAnfi9pbWFnZXMvcGFwZXIucG5nJ107XG4gICAgcHJpdmF0ZSB0aW1lcjtcbiAgICBwcml2YXRlIGltZ051bTogbnVtYmVyID0gMDtcbiAgICBwcml2YXRlIGlzV2lubmVyOiBudW1iZXIgPSAtMTtcblxuICAgIGNvbnN0cnVjdG9yKHBhZ2UsIGlkKSB7XG4gICAgICAgIHRoaXMudXNlciA9IHBhZ2UuZ2V0Vmlld0J5SWQoaWQpO1xuXG4gICAgICAgIHRoaXMuaW1nVXJsID0gdGhpcy5pbWdVcmxzWzBdO1xuICAgICAgICB0aGlzLnN0YXJ0Um9sbGluZygpO1xuICAgICAgICB0aGlzLmV2ZW50c2V0dGluZygpO1xuICAgIH1cblxuICAgIGV2ZW50c2V0dGluZygpIHtcbiAgICAgICAgdGhpcy51c2VyLm9uKGJ1dHRvbk1vZHVsZS5CdXR0b24udGFwRXZlbnQsICgpID0+IHtcbiAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy50aW1lcik7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdCgpO1xuICAgICAgICB9KVxuICAgIH1cblxuICAgIHNlbGVjdCgpIHtcbiAgICAgICAgY29uc3Qgc2VsZWN0ZWROdW0gPSBnZXRTZWxlY3RlZCgpO1xuICAgICAgICBsZXQgbnVtOiBudW1iZXI7XG4gICAgICAgIFxuICAgICAgICBpZiggdGhpcy5pc1dpbm5lciA+IC0xICYmIHNlbGVjdGVkTnVtID4gLTEgKXtcbiAgICAgICAgICAgIG51bSA9IChzZWxlY3RlZE51bSArICh0aGlzLmlzV2lubmVyID09PSAxID8gMSA6IDIpKSUzO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbnVtID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogdGhpcy5pbWdVcmxzLmxlbmd0aCk7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIHRoaXMudXNlci5zcmMgPSB0aGlzLmltZ1VybHNbbnVtXTtcbiAgICAgICAgc2V0U2VsZWN0ZWQobnVtKTtcbiAgICB9XG5cbiAgICBzZXRXaW5uZXIoaXNXaW5uZXIpIHtcbiAgICAgICAgdGhpcy5pc1dpbm5lciA9IGlzV2lubmVyO1xuICAgIH1cblxuICAgIHN0YXJ0Um9sbGluZygpIHtcbiAgICAgICAgdGhpcy50aW1lciA9IHNldEludGVydmFsKCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuaW1nTnVtID0gKHRoaXMuaW1nTnVtICsgMSkgJSAzO1xuICAgICAgICAgICAgdGhpcy51c2VyLnNyYyA9IHRoaXMuaW1nVXJsc1t0aGlzLmltZ051bV07XG4gICAgICAgICAgICBpZiAodGhpcy5pbWdOdW0gPT09IDIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnVzZXIud2lkdGggPSAnNDAlJztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy51c2VyLndpZHRoID0gJzM1JSc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sIDEwMCk7XG4gICAgfVxuXG4gICAgcmVzZXQoKSB7XG4gICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLnRpbWVyKTtcbiAgICAgICB0aGlzLnN0YXJ0Um9sbGluZygpO1xuICAgIH1cbn0iXX0=